#+title: Queueing Theory and Simulation, lecture 1
#+author: Nicky van Foreest
#+date: \today
#+email: n.d.van.foreest@rug.nl


#+STARTUP: overview
#+STARTUP: indent
#+OPTIONS:  toc:1 H:2

#+PROPERTY: header-args :session  :exports both

# +include: preamble_presentation.org
#+include: preamble_handout.org


* Overview

** General info
- This presentation is just a short overview.
- All  information is  on github
- All info is available on github.
- Read the intro's of the  documents we put on github; they contain important information. (It will cost you lots of time if you don't.)
- In case of confusion (or conflict) consult the =course_overview.org= on github, as that document prevails.

** Material

- =queueing_book.pdf= contains the main text, exercises, hints, and solutions
- For typo's, please make a PR (=pull request)
- short =youtube= movies to help you with simulating queueing systems.
- Assignments for the simulations, see the =simulations= directory.


* Lectures and Tutorials
** General lectures
    - Lectures of about one hour, a  overview and a few exercises
    - Help me  remind to record it!

** Tutorials

 As the attendance for tutorials  proves to be very low, we found another form.
 - Post questions on the discussion board on nestor. We discuss those problems and the solutions during the tutorial.
 - All relevant  material will be made available in =discussion_board_questions.pdf= on github (such as questions, solutions).


* Assignments

** A dumb, but motivating joke
- In a class of 14 year old pupils, there is something all speak about, a few know what it is, and only the teacher does it. What's that? \pause It's S-X!
- In a course  with 19 year old students, there is something all speak about, a few know what it is, and only the lecturer does it. What's that? \pause It's CODING! \pause
- And this annoys me to no-end! And I want this to change!

**  General structure and aim
- So I give the code to you in the assignment,  you explain what is going on,  you copy it, run it to do some experiments, and make some graphs or tables with numbers, and write a short 2 (3 at most) page document about it, in LaTeX.
- In other words, I don't want something difficult, I want something real simple, as long as you  start coding.
- Networking: You work on a document in pairs (of two).
- Networking: Every week you have to work with another person. Just ask (mail) around for other people to collaborate with.
- Networking: with a bit of luck you'll make a few life long friends.


* Grading

** All grades

See =course_overview.org= on github.

#+BEGIN_SRC python
    def compute_grade(a, e):
        if e < 5:
            g = e
        elif a >= 6:
            g = max(0.8 * e + 0.2 * a, e)
        else:
            g = 0.8 * e + 0.2 * a

        return int(g + 0.5) # rounding
#+END_SRC

* move file                                                        :noexport:

#+begin_src shell
mv qts_01.pdf ../
#+end_src
